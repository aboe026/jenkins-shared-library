/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // Apply the JaCoCo plugin to capture code coverage information
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    // Use Jenkins Releases for Jenkins plugin information
    maven {
        url 'https://repo.jenkins-ci.org/releases/'
    }
}

configurations {
    antJUnit
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:3.0.9'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // Needed for Jenkins @NonCPS annotations
    implementation 'com.cloudbees:groovy-cps:1.31'

    // Needed for Jenkins hudson.model classes
    implementation 'org.eclipse.hudson:hudson-core:3.2.1'

    // Needed for Jenkins CpsScript class
    implementation 'org.jenkins-ci.plugins.workflow:workflow-api:2.23.1@jar'
    implementation 'org.jenkins-ci.plugins.workflow:workflow-cps:2.41@jar'

    // Needed for usage of Jenkins HTTP Request Plugin
    implementation 'org.jenkins-ci.plugins:http_request:1.14@jar'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'junit:junit:4.13.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // Needed to merge suite junit XML into single XML for CI consumption
    antJUnit 'org.apache.ant:ant-junit:1.9.7'
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src']
        }
    }
    test {
        groovy {
            srcDir 'test'
        }
    }
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    // Control terminal output
    testLogging {
        events 'passed', 'skipped', 'failed', 'standardOut', 'standardError' // show status of each test
        exceptionFormat = 'full' // show stacktraces for errors
    }

    finalizedBy 'mergeJUnitReports' // merge individual XML files into single XML file for CI Consumption
}

jacocoTestReport {
    reports {
        xml.required = true // generate XML file for CI consumption
    }
}

task mergeJUnitReports {
    ext {
        resultsDir = file("$buildDir/test-results/test")
    }

    doLast {
        ant.taskdef(
            name: 'junitreport',
            classname: 'org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator',
            classpath: configurations.antJUnit.asPath
        )

        ant.junitreport(
            todir: resultsDir,
            tofile: 'TESTS-TestSuitesMerged.xml'
        ) {
            fileset(dir: resultsDir, includes: 'TEST-*.xml')
        }
    }
}

task viewCoverage {
    doLast {
        java.awt.Desktop.desktop.browse project.file('build/reports/jacoco/test/html/index.html').toURI()
    }
}
